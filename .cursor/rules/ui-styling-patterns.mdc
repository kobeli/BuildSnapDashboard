---
description: 
globs: 
alwaysApply: false
---
# Site Pulse UI 样式与布局模式

## 设计系统规范

### 1. 色彩体系
```css
/* src/styles/variables.css */
:root {
  /* 主色调 - 建筑行业蓝色 */
  --primary-color: #1890ff;
  --primary-color-hover: #40a9ff;
  --primary-color-active: #096dd9;
  --primary-color-light: #e6f7ff;
  
  /* 辅助色调 */
  --success-color: #52c41a;
  --warning-color: #faad14;
  --error-color: #ff4d4f;
  --info-color: #722ed1;
  
  /* 中性色 */
  --text-color: #262626;
  --text-color-secondary: #595959;
  --text-color-disabled: #bfbfbf;
  --border-color: #d9d9d9;
  --background-color: #fafafa;
  --background-color-light: #ffffff;
  
  /* 项目状态色彩 */
  --status-planning: #1890ff;
  --status-construction: #fa8c16;
  --status-completed: #52c41a;
  --status-paused: #d9d9d9;
  
  /* 项目类型色彩 */
  --type-residential: #722ed1;
  --type-commercial: #13c2c2;
  --type-infrastructure: #eb2f96;
  
  /* 阴影 */
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.03);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  
  /* 间距 */
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 24px;
  --spacing-xl: 32px;
  --spacing-xxl: 48px;
  
  /* 字体 */
  --font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-size-sm: 12px;
  --font-size-base: 14px;
  --font-size-lg: 16px;
  --font-size-xl: 18px;
  --font-size-xxl: 20px;
  
  /* 圆角 */
  --border-radius-sm: 4px;
  --border-radius-md: 6px;
  --border-radius-lg: 8px;
}
```

### 2. 布局系统
```css
/* src/styles/layout.css */

/* 容器布局 */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--spacing-md);
}

.container-fluid {
  width: 100%;
  padding: 0 var(--spacing-md);
}

/* 网格系统 */
.grid {
  display: grid;
  gap: var(--spacing-md);
}

.grid-cols-2 {
  grid-template-columns: repeat(2, 1fr);
}

.grid-cols-3 {
  grid-template-columns: repeat(3, 1fr);
}

.grid-cols-4 {
  grid-template-columns: repeat(4, 1fr);
}

/* Flex 布局 */
.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.flex-center {
  justify-content: center;
  align-items: center;
}

.flex-between {
  justify-content: space-between;
  align-items: center;
}

.flex-start {
  justify-content: flex-start;
  align-items: center;
}

.flex-end {
  justify-content: flex-end;
  align-items: center;
}

/* 响应式断点 */
@media (max-width: 576px) {
  .grid-cols-2,
  .grid-cols-3,
  .grid-cols-4 {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .grid-cols-3,
  .grid-cols-4 {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 992px) {
  .grid-cols-4 {
    grid-template-columns: repeat(3, 1fr);
  }
}
```

## 组件样式模式

### 1. 卡片组件样式
```css
/* src/components/ProjectCard/styles.module.css */
.projectCard {
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-sm);
  transition: all 0.2s ease-in-out;
  background: var(--background-color-light);
}

.projectCard:hover {
  border-color: var(--primary-color);
  box-shadow: var(--shadow-md);
  transform: translateY(-2px);
}

.projectCard .actions {
  display: flex;
  gap: var(--spacing-sm);
}

.projectCard .content {
  padding: var(--spacing-md);
}

.projectCard .tags {
  display: flex;
  gap: var(--spacing-sm);
  margin-top: var(--spacing-sm);
}

.projectCard .statusTag {
  padding: 2px 8px;
  border-radius: var(--border-radius-sm);
  font-size: var(--font-size-sm);
  font-weight: 500;
}

.projectCard .statusTag.planning {
  background-color: rgba(24, 144, 255, 0.1);
  color: var(--status-planning);
  border: 1px solid var(--status-planning);
}

.projectCard .statusTag.construction {
  background-color: rgba(250, 140, 22, 0.1);
  color: var(--status-construction);
  border: 1px solid var(--status-construction);
}

.projectCard .statusTag.completed {
  background-color: rgba(82, 196, 26, 0.1);
  color: var(--status-completed);
  border: 1px solid var(--status-completed);
}
```

### 2. 地图容器样式
```css
/* src/components/Map/MapContainer/styles.module.css */
.mapWrapper {
  position: relative;
  width: 100%;
  height: 600px;
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-md);
}

.mapContainer {
  width: 100%;
  height: 100%;
}

.loading {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.mapControls {
  position: absolute;
  top: var(--spacing-md);
  right: var(--spacing-md);
  z-index: 1000;
}

.mapFilters {
  position: absolute;
  top: var(--spacing-md);
  left: var(--spacing-md);
  background: var(--background-color-light);
  padding: var(--spacing-md);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-lg);
  max-width: 300px;
  z-index: 1000;
}

.projectPopup {
  background: var(--background-color-light);
  border-radius: var(--border-radius-md);
  padding: var(--spacing-md);
  box-shadow: var(--shadow-lg);
  max-width: 280px;
}

.projectPopup h4 {
  margin: 0 0 var(--spacing-sm) 0;
  color: var(--text-color);
  font-size: var(--font-size-lg);
}

.projectPopup p {
  margin: 0 0 var(--spacing-sm) 0;
  color: var(--text-color-secondary);
  font-size: var(--font-size-sm);
}
```

### 3. 表单组件样式
```css
/* src/components/ProjectForm/styles.module.css */
.projectForm {
  background: var(--background-color-light);
  padding: var(--spacing-lg);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-md);
}

.formSection {
  margin-bottom: var(--spacing-xl);
}

.formSection h3 {
  margin: 0 0 var(--spacing-md) 0;
  color: var(--text-color);
  font-size: var(--font-size-xl);
  font-weight: 600;
  border-bottom: 2px solid var(--primary-color);
  padding-bottom: var(--spacing-sm);
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-md);
}

.formActions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-md);
  margin-top: var(--spacing-xl);
  padding-top: var(--spacing-lg);
  border-top: 1px solid var(--border-color);
}

.uploadArea {
  border: 2px dashed var(--border-color);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-xxl);
  text-align: center;
  background: var(--background-color);
  transition: all 0.2s ease-in-out;
}

.uploadArea:hover {
  border-color: var(--primary-color);
  background: var(--primary-color-light);
}

.uploadArea.dragOver {
  border-color: var(--primary-color);
  background: var(--primary-color-light);
  transform: scale(1.02);
}
```

### 4. 响应式布局模式
```css
/* src/styles/responsive.css */

/* 主布局容器 */
.appLayout {
  display: flex;
  min-height: 100vh;
}

.sidebar {
  width: 280px;
  background: var(--background-color-light);
  border-right: 1px solid var(--border-color);
  transition: all 0.3s ease-in-out;
}

.sidebar.collapsed {
  width: 64px;
}

.mainContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: var(--background-color);
}

.header {
  height: 64px;
  background: var(--background-color-light);
  border-bottom: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--spacing-lg);
}

.content {
  flex: 1;
  padding: var(--spacing-lg);
  overflow-y: auto;
}

/* 移动端适配 */
@media (max-width: 768px) {
  .appLayout {
    flex-direction: column;
  }
  
  .sidebar {
    width: 100%;
    height: auto;
    border-right: none;
    border-bottom: 1px solid var(--border-color);
  }
  
  .sidebar.collapsed {
    height: 64px;
    width: 100%;
  }
  
  .content {
    padding: var(--spacing-md);
  }
  
  .formGrid {
    grid-template-columns: 1fr;
  }
  
  .formActions {
    flex-direction: column;
  }
  
  .mapWrapper {
    height: 400px;
  }
}

/* 平板适配 */
@media (max-width: 992px) and (min-width: 769px) {
  .sidebar {
    width: 240px;
  }
  
  .formGrid {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
  
  .mapWrapper {
    height: 500px;
  }
}
```

## 动画与交互效果

### 1. 通用动画类
```css
/* src/styles/animations.css */

/* 淡入淡出 */
.fadeIn {
  animation: fadeIn 0.3s ease-in-out;
}

.fadeOut {
  animation: fadeOut 0.3s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

/* 滑动效果 */
.slideIn {
  animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

/* 缩放效果 */
.scaleIn {
  animation: scaleIn 0.2s ease-out;
}

@keyframes scaleIn {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

/* 加载动画 */
.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* 脉冲效果 */
.pulse {
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}
```

### 2. 交互状态样式
```css
/* src/styles/interactions.css */

/* 按钮交互 */
.button {
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  user-select: none;
}

.button:hover {
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

.button:active {
  transform: translateY(0);
  box-shadow: var(--shadow-sm);
}

.button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
  transform: none;
  box-shadow: none;
}

/* 卡片交互 */
.card {
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

/* 输入框焦点 */
.input:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);
}

/* 加载状态 */
.loading {
  position: relative;
  pointer-events: none;
}

.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
}
```

## 主题切换支持

### 1. 深色主题变量
```css
/* src/styles/themes/dark.css */
[data-theme="dark"] {
  --text-color: #ffffff;
  --text-color-secondary: #a6a6a6;
  --text-color-disabled: #595959;
  --border-color: #434343;
  --background-color: #141414;
  --background-color-light: #1f1f1f;
  
  /* 调整组件背景 */
  --card-background: #262626;
  --header-background: #1f1f1f;
  --sidebar-background: #1f1f1f;
}
```

### 2. 主题切换组件
```typescript
// src/components/ThemeToggle/index.tsx
import React from 'react';
import { Switch } from 'antd';
import { MoonOutlined, SunOutlined } from '@ant-design/icons';
import { useAppStore } from '@/stores/appStore';
import styles from './styles.module.css';

const ThemeToggle: React.FC = () => {
  const { theme, setTheme } = useAppStore();

  const handleToggle = (checked: boolean) => {
    const newTheme = checked ? 'dark' : 'light';
    setTheme(newTheme);
    document.documentElement.setAttribute('data-theme', newTheme);
  };

  return (
    <div className={styles.themeToggle}>
      <SunOutlined />
      <Switch
        checked={theme === 'dark'}
        onChange={handleToggle}
        size="small"
      />
      <MoonOutlined />
    </div>
  );
};

export default ThemeToggle;
```

## 可访问性 (Accessibility) 规范

### 1. 语义化标签
```css
/* src/styles/accessibility.css */

/* 焦点指示器 */
*:focus {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* 跳过链接 */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: var(--primary-color);
  color: white;
  padding: 8px;
  text-decoration: none;
  border-radius: var(--border-radius-sm);
  z-index: 9999;
}

.skip-link:focus {
  top: 6px;
}

/* 屏幕阅读器文本 */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* 高对比度模式支持 */
@media (prefers-contrast: high) {
  .button,
  .card,
  .input {
    border-width: 2px;
  }
}

/* 减少动画偏好 */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
```

### 2. ARIA 标签使用
```typescript
// src/components/ProjectCard/index.tsx
const ProjectCard: React.FC<ProjectCardProps> = ({ project, onEdit, onView }) => {
  return (
    <div
      className={styles.projectCard}
      role="article"
      aria-labelledby={`project-title-${project.id}`}
      tabIndex={0}
    >
      <h3 id={`project-title-${project.id}`}>{project.title}</h3>
      <p aria-label="项目地址">{project.location.address}</p>
      <div className={styles.actions}>
        <button
          aria-label={`查看项目 ${project.title} 详情`}
          onClick={() => onView(project.id)}
        >
          查看
        </button>
        <button
          aria-label={`编辑项目 ${project.title}`}
          onClick={() => onEdit(project.id)}
        >
          编辑
        </button>
      </div>
    </div>
  );
};
```
